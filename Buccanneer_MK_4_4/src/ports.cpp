#include "ios.hpp"

//WINGS PORTS
const char FRONT_LEFT_WING_PORT = 'A';
const char FRONT_RIGHT_WING_PORT = 'F';
const char BACK_LEFT_WING_PORT = 'G';
const char BACK_RIGHT_WING_PORT = 'H';

//ROTATION SENSOR PORT
const int CATAPULT_ROTATION_PORT = 30;

//DISTANCE SENSOR PORT
const int DISTANCE_PORT = 30;

//SET NEGATIVE FOR REVERSE PORT
const int BIG_CATAPULT_PORT = 4;
const int SMALL_CATAPULT_PORT = -11;

//SET FALSE FOR CCW ROTATION
const bool NORMAL_ROTATION = true;

//POSITION OF THE CATAPULT BEFORE IT FIRES (IN DEGREES)
const int PRIME_POSITION = 80;

//RANGE THE DISTANCE SENSOR WILL DETECT A TRIBALL (IN MM)
const int DETECTION_RANGE = 50;

//AMOUNT OF TIME (IN MS) IT TAKES FOR THE CATAPULT FIRE A LOADED TRIBALL
const int FIRING_PERIOD = 200;
//NOTE CATAPULT WILL NOT WIND DOWN IF TOO LOW AND WILL DOUBLE-FIRE IF TOO HIGH


//DRIVE PORTS NEGATIVE IF REVERSED
//LEFT DRIVE
const int FRONT_LEFT_MOTOR_PORT = -1;
const int MID_LEFT_MOTOR_PORT = -13;
const int BACK_LEFT_MOTOR_PORT = -12;

//RIGHT DRIVE
const int FRONT_RIGHT_MOTOR_PORT = 5;
const int MID_RIGHT_MOTOR_PORT = 18;
const int BACK_RIGHT_MOTOR_PORT = 20;

//TRACKERS
const int LAT_ROTATION_PORT = 17;
const int HORIZONTAL_ROTATION_PORT = 16;

const bool REVERSED_HORIZONTAL = false;
const bool REVERSED_LATERAL = false;

const double LAT_TRACKING_DIAMETER = 2.00;
const double HORIZONTAL_TRACKING_DIAMETER = 2.00;

//HOW FAR UP OR DOWN THE HORIZONTAL TRACKING WHEEL IS FROM THE CENTER OF DRIVE
const double PERPENDICULAR_HORIZONTAL_DISTANCE = 2.434;

//HOW FAR LEFT OR RIGHT THE LATERAL TRACKING WHEEL IS FROM THE CENTER OF DRIVE
const double PERPENDICULAR_LATERAL_DISTANCE = 0.4325;


//DRIVE TRAIN TRACKING
const float TRACK_WIDTH = 11.0;
const float DRIVE_DIAMETER = 2.75;
const float DRIVE_RPM = 450.0;

//IMU
const int IMU_PORT = 6;

//INTAKE PORT NEGATIVE IF REVERSED
const int INTAKE_PORT = 14;


//HANG PORTS
const char UP_HANG_PORT = 'D';
const char DOWN_HANG_PORT = 'E';

//TIME INTERVAL FOR DOUBLE CLICKING
const int DOUBLE_CLICK_DELAY = 100;



//DO NOT MESS WITH THESE
bool driveRan = 0;
bool autonRan = 0;

pros::Controller master(pros::E_CONTROLLER_MASTER);

const int DELAY_TIME = 10;
